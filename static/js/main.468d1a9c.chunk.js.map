{"version":3,"sources":["components/CrudForm.js","components/CrudTableRow.js","components/CrudTable.js","components/CrudApp.js","App.js","reportWebVitals.js","index.js"],"names":["initialForm","name","job","id","CrudForm","props","useState","form","setForm","useEffect","dataToEdit","handleChange","e","target","value","handleReset","setDataToEdit","Grid","container","Typography","style","padding","margin","variant","color","component","onSubmit","preventDefault","createData","updateData","direction","TextField","width","align","label","onChange","required","ButtonGroup","Button","type","startIcon","onClick","CrudTableRow","data","deleteData","TableRow","TableCell","CrudTable","Table","TableHead","TableBody","map","el","initialDB","CrudApp","db","setDb","newData","Box","item","xs","md","Date","now","window","confirm","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.468d1a9c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { ButtonGroup, TextField, Button, Grid } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\nconst initialForm = {\r\n    name: '',\r\n    job: '',\r\n    id: null\r\n}\r\n\r\nconst CrudForm = (props)=>{\r\n\r\n    const [form, setForm] = useState(initialForm);\r\n\r\n    useEffect(()=>{\r\n        if(props.dataToEdit){\r\n            setForm(props.dataToEdit)\r\n        }else{\r\n            setForm(initialForm)\r\n        }\r\n    },[props.dataToEdit])\r\n\r\n    const handleChange = (e) =>{\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(form.id === null){\r\n            props.createData(form);\r\n        }else{\r\n            props.updateData(form); \r\n        }\r\n\r\n        handleReset(); \r\n    }\r\n\r\n    const handleReset = (e) =>{\r\n        setForm(initialForm);\r\n        props.setDataToEdit(null); \r\n    }\r\n\r\n    return(\r\n        <Grid container>\r\n            <Typography style={{padding: '1em', margin: '0 auto'}} variant=\"h5\" color=\"textSecondary\">{props.dataToEdit == null ? 'Agregar': 'Editar'}</Typography>\r\n            <Grid container component=\"form\" onSubmit={handleSubmit} direction=\"column\">\r\n                <TextField style={{width: '90%', margin: '0 auto'}} align= \"center\" label=\"Nombre\" name=\"name\" onChange={handleChange} value={form.name} required={true}></TextField>\r\n                <TextField style={{width: '90%', margin: '0 auto'}} label=\"Ocupación\" name=\"job\" onChange={handleChange} value={form.job} required={true}></TextField>\r\n\r\n                <ButtonGroup style={{margin: '0 auto', padding: '1em'}}>\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" startIcon={<SaveIcon />}>Guardar</Button>\r\n                    <Button type=\"reset\" color=\"secondary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={handleReset}>Limpiar</Button>\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CrudForm; ","import React from 'react';\r\nimport { TableRow, TableCell, Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nconst CrudTableRow = ({data, setDataToEdit, deleteData, updateData})=>{\r\n    return(\r\n       \r\n\r\n        <TableRow>\r\n            <TableCell>{data.name}</TableCell>\r\n            <TableCell>{data.job}</TableCell>\r\n            <TableCell>\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon/>} onClick={()=>setDataToEdit(data)}>Editar</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon/>} onClick={()=>deleteData(data.id)}>Eliminar</Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default CrudTableRow; ","import { Table, Typography, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CrudTableRow from './CrudTableRow';\r\nconst CrudTable = ({data, setDataToEdit, deleteData, updateData})=>{\r\n    return(\r\n        <div id=\"id-table\">\r\n            <Typography variant=\"h5\" color=\"textSecondary\" style={{padding: '1em'}} align=\"center\">Tabla de datos</Typography>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Nombre</TableCell>\r\n                        <TableCell>Ocupación</TableCell>\r\n                        <TableCell>Acciones</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map(el => <CrudTableRow key= {el.id} data = {el} deleteData = {deleteData} setDataToEdit={setDataToEdit} updateData={updateData}></CrudTableRow>)}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudTable; ","\r\nimport React, { useState } from 'react';\r\nimport CrudForm from './CrudForm';\r\nimport CrudTable from './CrudTable';\r\nimport { Typography, Grid, Box } from '@material-ui/core';\r\n\r\nconst initialDB = [\r\n    {\r\n        id: 1, \r\n        name: 'David',\r\n        job: 'programmer'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Jorge',\r\n        job: 'Journalist'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Rebeca', \r\n        job: 'singer'\r\n    }\r\n]\r\n\r\nconst CrudApp = ()=>{\r\n\r\n    const [db, setDb] = useState(initialDB);\r\n\r\n    const [dataToEdit, setDataToEdit] = useState(null); \r\n\r\n    const createData = (data)=>{\r\n        data.id = Date.now();\r\n        setDb([...db, data])\r\n    }\r\n\r\n    const updateData = (data)=>{\r\n        let newData = db.map(el => el.id === data.id ? data : el);\r\n        setDb(newData);  \r\n    }\r\n\r\n    const deleteData = (id)=>{\r\n        let confirm = window.confirm('Seguro?')\r\n\r\n        if(confirm){\r\n            let newData = db.filter(el => el.id !== id);\r\n            setDb(newData); \r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Typography variant=\"h4\" color=\"textSecondary\" align=\"center\">CRUD App</Typography>\r\n            <Box>\r\n                <Grid container /* spacing={1} bgcolor=\"primary.main\" justify=\"space-evenly\" */>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box align=\"center\">\r\n                            <CrudForm createData = {createData} updateData={updateData} dataToEdit={dataToEdit} setDataToEdit = {setDataToEdit}></CrudForm>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <Box>\r\n                            <CrudTable data = {db} deleteData = {deleteData} setDataToEdit={setDataToEdit} updateData={updateData}></CrudTable>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrudApp; ","import React from 'react';\nimport CrudApp from './components/CrudApp'\nimport Typography from '@material-ui/core/Typography'\n\nfunction App() {\n  return (\n    <div>\n      <Typography variant=\"h2\" color=\"primary\" align=\"center\">REACT CRUD</Typography>\n      <CrudApp></CrudApp>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}